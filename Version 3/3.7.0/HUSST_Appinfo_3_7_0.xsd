<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:api="http://husst.de/Appinfo/3_7_0"
           targetNamespace="http://husst.de/Appinfo/3_7_0"
           elementFormDefault="qualified" attributeFormDefault="unqualified">

  <xs:annotation>
    <xs:documentation>
      HUSST Appinfo
      Version: 3.7.0

      Mehr Informationen:
      - https://husst.de/
      - https://github.com/HUSST-de/HUSST

      Lizensiert unter CC BY-SA 4.0 (https://creativecommons.org/licenses/by-sa/4.0/)

      Dieses Dokument dient als ergänzende Definition für Elemente in den XSDs.
    </xs:documentation>
  </xs:annotation>

  <xs:complexType name="field_Type" mixed="true">
    <xs:annotation>
      <xs:documentation>Feldname.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="name" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Name des Datenfelds.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="primekey_Type">
    <xs:annotation>
      <xs:documentation>Primärschlüssel Definition. Liste von einem oder mehreren Datenfelder, die den Primärschlüssel der Datenmenge bilden.
        Für einen Datentyp darf maximal ein Primärschlüssel definiert sein.
        Der Primärschlüssel ist immer eindeutig.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="field" type="api:field_Type" minOccurs="1" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

<xs:complexType name="example_Type" mixed="true">
  <xs:annotation>
    <xs:documentation>
      Freies Beispiel zur Verwendung eines Typs oder eines Elements einer Datenstruktur.
      In dem Beispiel können Text und Xml Elemente frei gemischt werden.
    </xs:documentation>
  </xs:annotation>
  <xs:sequence>
    <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax"/>
  </xs:sequence>
</xs:complexType>

<xs:complexType name="fieldexample_Type" mixed="true">
  <xs:annotation>
    <xs:documentation>
	  Strukturiertes Beispiel zur Verwendung eines Typs oder eines Elements einer Datenstruktur.
      Besteht aus einer Liste von Feldern, die exemplarische Werte für ein konkretes Beispiel enthalten.
	  Vor der Liste und nach jedem Feld können Erklärungstexte eingestreut werden.
	  Bei der Erzeugung der Dokumentation können diese Beispiele strukturiert formatiert werden. 
    </xs:documentation>
  </xs:annotation>
  <xs:sequence>
    <xs:element name="field" type="api:field_Type" minOccurs="1" maxOccurs="unbounded"/>
  </xs:sequence>
</xs:complexType>

  <xs:complexType name="uniquekey_Type">
    <xs:annotation>
      <xs:documentation>Eindeutigkeitsschlüssel Definition.
        Liste von einem oder mehreren Datenfelder, die einen Eindeutigkeitsschlüssel der Datenmenge bilden.
        Neben dem häufig technisch definierten Primärschlüssel, kann es ein oder mehrere datenlogische Schlüssel geben,
        über denen eine Datenmenge eindeutig sein muss.
        Für einen Datentyp dürfen mehrere Eindeutigkeitsschlüssel definiert sein.
        Ein Eindeutigkeitsschlüssel darf auch optionale Felder enthalten. Der fehlende Wert ist dann *eine* mögliche
        Ausprägung des Wertes.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="field" type="api:field_Type" minOccurs="1" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="name" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Name des Eindeutigkeitsindexes.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="schema_Type">
    <xs:annotation>
      <xs:documentation>logisches Daten-Schema, dem die Datenelemente dieses Typs zuzuordnen sind.
        Außerdem kann für eine Datenlieferung das Vorhandensein dieses Datentyps verlangt werden.
        Ein Datentyp darf mehreren Schemata zugeordnet sein.
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="name" type="api:HusstSchema_Type" use="required">
      <xs:annotation>
        <xs:documentation>Name des Datenfelds.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="nillable" type="xs:boolean" use="required">
      <xs:annotation>
        <xs:documentation>Gibt an, ob für ein Schema Datenelemente von diesem
          Typ zwingend vorhanden sein müssen.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:simpleType name="HusstSchema_Type">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Tarif">
        <xs:annotation>
          <xs:documentation>Husst Datenschema Tarif.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Tarifstrecken">
        <xs:annotation>
          <xs:documentation>Husst Datenschema Tarifstrecken.
            Ergänzung des Datenschemas Tarif um Strukturen für Strecken basierte Tarife wie z.B. den Deutschlandtarif.
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Basis">
        <xs:annotation>
          <xs:documentation>Husst Datenschema Basis.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Angebot">
        <xs:annotation>
          <xs:documentation>Husst Datenschema Angebot.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Vertrieb">
        <xs:annotation>
          <xs:documentation>Husst Datenschema Vertrieb.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:element name="primekey" type="api:primekey_Type">
    <xs:annotation>
      <xs:documentation>
        Definiert die Felder, über die ein Element dieses Typs in der gesamten Datenmenge eindeutig identifiziert werden kann.
        Das Feld "Deaktiviert" wird implizit ergänzt. 
      </xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="uniquekey" type="api:uniquekey_Type">
    <xs:annotation>
      <xs:documentation>
        Definiert Felder, über die zusammen sich alle Elemente dieses Typs unterscheiden müssen.  
        Das Feld "deaktiviert" wird implizit ergänzt. 
      </xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="schema" type="api:schema_Type">
    <xs:annotation>
      <xs:documentation>Husst-Schema, dem ein Husst-Datentyp zugeordnet ist.</xs:documentation>
    </xs:annotation>
  </xs:element>
	<xs:element name="remarks" type="xs:string">
		<xs:annotation>
			<xs:documentation>Interne Hinweise zu einem Strukturelement - der Text erscheint nicht in der offiziellen Dokumentation.</xs:documentation>
    	</xs:annotation>
	</xs:element>
	<xs:element name="example" type="api:example_Type">
		<xs:annotation>
			<xs:documentation>
				Beispielhafte Darstellung zur Veranschaulichung eines Typs oder Elements.
				Wird typischerweise innerhalb von xs:appinfo verwendet.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="fieldexample" type="api:fieldexample_Type">
		<xs:annotation>
			<xs:documentation>
				Strukturierte Beispieldaten mit konkreten Feldwerten zur Dokumentation von Typen.
				Unterstützt erklärenden Freitext und mehrere Felder.
			</xs:documentation>
		</xs:annotation>
	</xs:element>

    <xs:element name="reference" type="xs:string">
    	<xs:annotation>
    		<xs:documentation>Verweis auf eine externe Referenz zu dem Strukturelement.
Das Format für die Referenz kann frei gewählt werden.
Beispiel:
VDV-KA:  Kundengruppen des OePV.
aus XML-Schema_KVP_DL_PV.xsd (BOM 6-38)</xs:documentation>
    	</xs:annotation>
   	</xs:element>

    <xs:element name="since" type="api:husstversion_Type">
    	<xs:annotation>
    		<xs:documentation>Angabe einer Husst-Version</xs:documentation>
    		<xs:appinfo>
    			<api:example>
     3.0.0
oder 3.4
oder 3.7.0.1
    			</api:example>
    		</xs:appinfo>
    	</xs:annotation>
    </xs:element>

    <xs:simpleType name="husstversion_Type">
    	<xs:annotation>
    		<xs:documentation>Format einer Husst-Version, mindestens Haupt- und Neberversionsnummer</xs:documentation>
    	</xs:annotation>
    	<xs:restriction base="xs:string">
    		<xs:pattern value="\d+\.\d+(\.\d+(\.\d+)?)?"></xs:pattern>
    	</xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="husstversionlist_Type">
    	<xs:annotation>
    		<xs:documentation>Liste von Husst-Versionen, mindestens eine</xs:documentation>
    	</xs:annotation>
    	<xs:restriction base="xs:string">
    		<xs:pattern value="\d+\.\d+(\.\d+(\.\d+)?)?(,\d+\.\d+(\.\d+(\.\d+)?)?)*"></xs:pattern>
    	</xs:restriction>
    </xs:simpleType>

    <xs:element name="changed" type="api:husstversionlist_Type">
    	<xs:annotation>
    		<xs:documentation>Angabe einer Liste von Husst-Versionen</xs:documentation>
    		<xs:appinfo>
    			<api:example>
3.0.0,3.4,3.7.0.1
oder
3.4
    			</api:example>
    		</xs:appinfo>
    	</xs:annotation>
   	</xs:element>
</xs:schema>
