<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:husstDV="http://husst.de/Versorgungsdaten/3_x"
           xmlns:api="http://www.husst.de/Appinfo/3_x"
           targetNamespace="http://husst.de/Versorgungsdaten/3_x"
           elementFormDefault="qualified" attributeFormDefault="unqualified">

  <xs:annotation>
    <xs:documentation>
      HUSST Basis-Versorgungsdaten
      Version: 3.x

      Mehr Informationen:
      - https://husst.de/
      - https://github.com/HUSST-de/HUSST

      Lizensiert unter CC BY-SA 4.0 (https://creativecommons.org/licenses/by-sa/4.0/)
    </xs:documentation>
  </xs:annotation>

  
  <xs:simpleType name="DateTimeCompact">
    <xs:restriction base="xs:dateTime">
      <xs:minInclusive value="1990-01-01T00:00:00Z"/>
      <xs:maxInclusive value="2117-12-31T23:59:58Z"/>
    </xs:restriction>
  </xs:simpleType>
  
  <xs:simpleType name="DateCompact">
    <xs:restriction base="xs:date">
      <xs:minInclusive value="1990-01-01"/>
      <xs:maxInclusive value="2117-12-31"/>
    </xs:restriction>
  </xs:simpleType>
  
  <xs:simpleType name="DauerMinuten">
    <xs:annotation>
      <xs:documentation>
        Definiert eine Dauer. Bei der Interpretation wird auf ganze Minuten geachtet. Sekunden-Angaben werden ignoriert.
        In der Datenbankabbildung wird ein Integer für eine Anzahl an Minuten empfohlen.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:duration"/>
  </xs:simpleType>
  
  <xs:simpleType name="UhrzeitMinuten">
    <xs:annotation>
      <xs:documentation>
        Definiert den Zeitpunkt eines Tages. Bei der Interpretation wird auf ganze Minuten geachtet. Sekunden-Angaben werden ignoriert.
        In der Datenbankabbildung wird ein Integer für eine Anzahl an Minuten nach 0 Uhr empfohlen.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:time"/>
  </xs:simpleType>
  
  <xs:simpleType name="INT1">
    <xs:restriction base="xs:unsignedInt">
      <xs:minInclusive value="0"/>
      <xs:maxInclusive value="255"/>
    </xs:restriction>
  </xs:simpleType>
  
  <xs:simpleType name="INT2">
    <xs:restriction base="xs:unsignedInt">
      <xs:minInclusive value="0"/>
      <xs:maxInclusive value="65535"/>
    </xs:restriction>
  </xs:simpleType>
  
  <xs:simpleType name="INT4">
  	<xs:restriction base="xs:unsignedInt">
  		<xs:minInclusive value="0"/>
  		<xs:maxInclusive value="4294967295"/>
  	</xs:restriction>
  </xs:simpleType>
  
  <xs:simpleType name="INT8">
    <xs:restriction base="xs:unsignedLong">
      <xs:minInclusive value="0"/>
      <xs:maxInclusive value="18446744073709551615"/>
    </xs:restriction>
  </xs:simpleType>
  
  <xs:simpleType name="FLOAT1">
    <xs:annotation>
      <xs:documentation>
        englische Notation beachten, z. B. 19 Euro = 19.00 Euro
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:decimal">
      <xs:minInclusive value="0"/>
      <xs:maxInclusive value="100"/>
    </xs:restriction>
  </xs:simpleType>
  
  <xs:simpleType name="KoordWgs84_Type">
    <xs:restriction base="xs:float"/>
  </xs:simpleType>
  
  <xs:simpleType name="Char">
    <xs:restriction base="xs:string">
      <xs:minLength value="1"/>
      <xs:maxLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  
  <xs:simpleType name="String250">
    <xs:restriction base="xs:string">
      <xs:maxLength value="250"/>
    </xs:restriction>
  </xs:simpleType>
  
  <xs:simpleType name="blobString">
    <xs:restriction base="xs:string">
      <xs:pattern value="[ -þ€–]*"/>
    </xs:restriction>
  </xs:simpleType>
  
  <xs:simpleType name="VersionStatus_Type">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Release"/>
      <xs:enumeration value="work in progress"/>
      <xs:enumeration value="stabil"/>
      <xs:enumeration value="in Arbeit"/>
    </xs:restriction>
  </xs:simpleType>
  
  <xs:simpleType name="Lang_Type">
    <xs:annotation>
      <xs:documentation>
        Für diese Datenlieferungen sind nur 2-Zeichen Iso-Codes nach ISO
        639-1:2002 vorgesehen
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:language">
      <xs:maxLength value="2"/>
    </xs:restriction>
  </xs:simpleType>
  
  <xs:complexType name="Zeitraeume_Type">
    <xs:annotation>
      <xs:documentation>
        Gültigkeitszeitraum
      </xs:documentation>
      <xs:appinfo>
        <api:primekey>
          <api:field name="ID_Zeitraum"/>
        </api:primekey>
        <api:schema name="Basis"/>
      </xs:appinfo>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="ID_Zeitraum" type="husstDV:INT4" maxOccurs="1" minOccurs="1"/>
      <xs:element name="ZeitraumVon" type="husstDV:DateTimeCompact" minOccurs="0" maxOccurs="1"/>
      <xs:element name="ZeitraumBis" type="husstDV:DateTimeCompact" minOccurs="0" maxOccurs="1"/>
      <xs:element name="DatenversionZeitraum" type="xs:string" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Eindeutiger Schlüssel für die Datenmenge, die in dem Zeitraum enthalten ist,
            bezogen auf die DatenversionInhalt des Elements VersionInhalt.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="HauptZeitraumNr" type="husstDV:INT4" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Alle Zeiträume mit dem gleichen
            Hauptzeitraum
            bilden einen gemeinsamen Datenraum, in dem
            alle Refrenzen ID_xx die
            gleiche Bedeutung haben und
            auflösbar sind.
            Sind zu einem Zeitpunkt
            mehrere Zeiträume mit unterschiedlichen
            Hauptzeitraumnummern
            gültig, hat der mit der höheren
            Hauptzeitraumnummer Vorrang.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="SubZeitraumNr" type="husstDV:INT4" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Die Subzeitraumnummer ist innerhalb einer
            Hauptzeitraumnummer ununterbrochen, aufsteigend nummeriert,
            beginnend mit 1.
            Bei gleichzeitiger Gültigkeit mehrere Subzeiträume
            hat die höhere
            SubZeitraumNr Vorrang vor der kleineren.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  
  <xs:complexType name="Zeitraumoptionen_Type">
    <xs:annotation>
      <xs:documentation>
        ordnet einem Zeitraum zusätzliche Optionen zu
      </xs:documentation>
      <xs:appinfo>
        <api:primekey>
          <api:field name="Option"/>
          <api:field name="ID_Zeitraum"/>
        </api:primekey>
        <api:schema name="Basis"/>
      </xs:appinfo>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="ID_Zeitraum" type="husstDV:INT4" maxOccurs="1" minOccurs="1"/>
      <xs:element name="Option" type="husstDV:String250" maxOccurs="1" minOccurs="1">
        <xs:annotation>
          <xs:documentation>Schlüsselstring der Option</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Wert" type="xs:string" minOccurs="0" maxOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  
  <xs:complexType name="Kalender_Type">
    <xs:annotation>
      <xs:documentation>
        Kalender mit zugeordneten Tagesarten.
        Ein Betriebstag ist ein Kalendertag, kann aber abweichende Tagesanfang
        und -ende haben.
        Tagesanfang und -ende werden nicht explizit im Kalender definiert.

        Benötigt das System für eine Funktionalität eine ID_Tagesart, dann ermittelt
        es diese aus dem Kalender.
        Ist für einen konkreten Kalendertag kein Eintrag im Kalender vorhanden,
        kann das System über
        geeignete Tagesartmerkmalelemente eine Default Tagesart aufgrund des
        Wochentages und allgemein berechenbarer
        Feiertage ermittelt werden.

        Siehe auch Tagesmerkmale_Type, Tagesmerkmalelemente_Type und
        Tagsartmerkmalelemente_Type.
      </xs:documentation>
      <xs:appinfo>
        <api:primekey>
          <api:field name="ID_Betriebstag"/>
          <api:field name="ID_Zeitraum"/>
        </api:primekey>

        <api:schema name="Angebot"/>
      </xs:appinfo>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Deaktiviert" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <xs:element name="ID_Zeitraum" type="husstDV:INT4" maxOccurs="1" minOccurs="1"/>
      <xs:element name="ID_Betriebstag" type="husstDV:DateCompact" maxOccurs="1" minOccurs="1">
        <xs:annotation>
          <xs:documentation>Datum des Betriebstages</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ID_Betriebstagesart" type="husstDV:INT4" maxOccurs="1" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Tagesart des Betriebstages
          </xs:documentation>
        </xs:annotation>
      </xs:element>

      <xs:element name="ReferenzExtern" type="xs:string" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Dient als Referenz um extern definierte Elemente über einen ggf. auch nicht numerischen Schlüssel
            identifizieren zu können.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DynAttribut" type="husstDV:DynAttribut_Subtype" maxOccurs="unbounded" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  
  <xs:complexType name="Tagesarten_Type">
    <xs:annotation>
      <xs:documentation>
        Eine Tagesart beschreibt den logischen Charakter
        eines Tages soweit der für das vorliegende System benötigt wird.
        Einem Kalendertag ist genau eine Tagesart zugeordnet.
      </xs:documentation>
      <xs:appinfo>
        <api:primekey>
          <api:field name="ID_Betriebstagesart"/>
          <api:field name="ID_Zeitraum"/>
        </api:primekey>
        <api:schema name="Angebot"/>
      </xs:appinfo>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Deaktiviert" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <xs:element name="ID_Zeitraum" type="husstDV:INT4" maxOccurs="1" minOccurs="1"/>
      <xs:element name="ID_Betriebstagesart" type="husstDV:INT4" maxOccurs="1" minOccurs="1">
        <xs:annotation>
          <xs:documentation>Kennung der Tagesart</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Bezeichnung" type="xs:string" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Informationen, welche Bedeutung diese
            Kennung hat.
          </xs:documentation>
        </xs:annotation>
      </xs:element>

      <xs:element name="ReferenzExtern" type="xs:string" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Dient als Referenz um extern definierte Elemente über einen ggf. auch nicht numerischen Schlüssel
            identifizieren zu können.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DynAttribut" type="husstDV:DynAttribut_Subtype" maxOccurs="unbounded" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  
  <xs:complexType name="Tagesmerkmale_Type">
    <xs:annotation>
      <xs:documentation>
        Ein Tagesmerkmal muss so gestaltet sein, dass an jedem
        Betriebstag (Kalendertag aber ggf. abweichende Start-/Ende Uhrzeit) aus der
        Liste der Mermalelemente genau ein Element gültig ist.

        Für eine Tagesart können mehrere Elemente aus einer Liste eines
        Tagesmerkmales definiert sein.

        Beispiele:
        Tagesmerkmal:"Wochentag=("Mo","Di","Mi","Do","Fr","Sa","So")
        Tagesmerkmal:"Ferien"=("Ja","Nein")

        Die Husst Schnittstelle definiert ein Default-Tagesmerkmal mit dem
        vorgegebenen Bezeichner
        "husstDefaultermittlung"=("Mo","Di","Mi","Do","Fr","Sa","So","Mo/Feiertag","Di/Feiertag","Mi/Feiertag","Do/Feiertag","Fr/Feiertag","Sa/Feiertag","So/Feiertag")
        Mit diesem Tagesmerkmal können Tagesarten ausgezeichnet werden, die
        dann gelten sollen,
        wenn kein Kalendereintrag gefunden wird. Das Vertriebssystem ermittelt
        dann aufgrund des Wochentages und der
        allgemein berechenbaren Feiertage (Einige sind natürlich nicht eindeutig
        ermittelbar) das husstDefault-Tagesmerkmal
        und sucht eine Tagesart, für die dieses Merkmal gesetzt ist. Maximal
        vierzehn Tagesarten können darüber
        unterschieden werden und keine zwei Tagesarten dürfen eines der Merkmale
        gemeinsam haben).

        Das Tagesmerkmal "husstDefaultermittlung" muss nicht definiert werden.
        Wenn eine Datenmenge das Merkmal definiert,
        darf es nur mit der hier definierten Intension verwendet werden.

        Alle anderen Tagesartmerkmal haben lediglich deklarativen Charakter.
        Eine vorgegebene Behandlung oder
        Auswertung ist über den HUSST-Standard nicht definiert.
      </xs:documentation>
      <xs:appinfo>
        <api:primekey>
          <api:field name="ID_Tagesmerkmal"/>
          <api:field name="ID_Zeitraum"/>
        </api:primekey>
        <api:schema name="Angebot"/>
      </xs:appinfo>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Deaktiviert" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <xs:element name="ID_Zeitraum" type="husstDV:INT4" maxOccurs="1" minOccurs="1"/>
      <xs:element name="ID_Tagesmerkmal" type="husstDV:INT4" maxOccurs="1" minOccurs="1">
        <xs:annotation>
          <xs:documentation>Kennung des Tagesmerkmals</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Bezeichnung" type="xs:string" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Bezeichnungen mit dem Prefix "husst" sind reserviert.

            Die Bezeichnung "husstDefaultermittlung" hat eine definiert Bedeutung
            (Siehe Tagesmerkmale_Type).
            Ansonsten kann die Bezeichnung frei vergeben werden.
          </xs:documentation>
        </xs:annotation>
      </xs:element>

      <xs:element name="ReferenzExtern" type="xs:string" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Dient als Referenz um extern definierte Elemente über einen ggf. auch nicht numerischen Schlüssel
            identifizieren zu können.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DynAttribut" type="husstDV:DynAttribut_Subtype" maxOccurs="unbounded" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  
  <xs:complexType name="TagesmerkmalElemente_Type">
    <xs:annotation>
      <xs:documentation>
        Jedes Tagesmerkmal definiert eine Liste mit
        unterschiedlichen Tagesmerkmal Elementen.
        Siehe auch Tagesmerkmale_Type.
      </xs:documentation>
      <xs:appinfo>
        <api:primekey>
          <api:field name="ID_TagesmerkmalElement"/>
          <api:field name="ID_Zeitraum"/>
        </api:primekey>
        <api:uniquekey name="Uix_TagesmerkmalElemente">
          <api:field name="ID_Tagesmerkmal"/>
          <api:field name="Bezeichnung"/>
          <api:field name="ID_Zeitraum"/>
        </api:uniquekey>
        <api:schema name="Angebot"/>
      </xs:appinfo>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Deaktiviert" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <xs:element name="ID_Zeitraum" type="husstDV:INT4" maxOccurs="1" minOccurs="1"/>
      <xs:element name="ID_TagesmerkmalElement" type="husstDV:INT4" maxOccurs="1" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Kennung des Tagesmerkmalelements
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ID_Tagesmerkmal" type="husstDV:INT4" maxOccurs="1" minOccurs="1">
        <xs:annotation>
          <xs:documentation>Kennung des Tagesmerkmals</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Bezeichnung" type="husstDV:String250" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>Eindeutiger Bezeichner des Tagesartmerkmalelements</xs:documentation>
        </xs:annotation>
      </xs:element>

      <xs:element name="ReferenzExtern" type="xs:string" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Dient als Referenz um extern definierte Elemente über einen ggf. auch nicht numerischen Schlüssel
            identifizieren zu können.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DynAttribut" type="husstDV:DynAttribut_Subtype" maxOccurs="unbounded" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  
  <xs:complexType name="TagesartMerkmalElemente_Type">
    <xs:annotation>
      <xs:documentation>
        TagesartMerkmalElemente vernknüpfen eine Tagesart
        mit einer Menge von Tagesmerkmal-Elementen.

        Damit beschreibt die Datenmenge lediglich formal die Intension der
        Tagesart.
        Lediglich für die Elemente des Tagesmerkmals "husstDefaultermittlung" ist
        eine funktionale Bedeutung definiert (siehe Tagesmerkmale_Type).
      </xs:documentation>
      <xs:appinfo>
        <api:primekey>
          <api:field name="ID_TagesartMerkmalElement"/>
          <api:field name="ID_Zeitraum"/>
        </api:primekey>

        <api:schema name="Angebot"/>

      </xs:appinfo>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Deaktiviert" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <xs:element name="ID_Zeitraum" type="husstDV:INT4" maxOccurs="1" minOccurs="1"/>
      <xs:element name="ID_TagesartMerkmalElement" type="husstDV:INT4" maxOccurs="1" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Kennung des Tagesartmerkmalelements
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ID_Betriebstagesart" type="husstDV:INT4" maxOccurs="1" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Kennung der ID_Betriebstagesart
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ID_TagesmerkmalElement" type="husstDV:INT4" maxOccurs="1" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Kennung des Tagesmerkmalelements
          </xs:documentation>
        </xs:annotation>
      </xs:element>

      <xs:element name="ReferenzExtern" type="xs:string" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Dient als Referenz um extern definierte Elemente über einen ggf. auch nicht numerischen Schlüssel
            identifizieren zu können.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DynAttribut" type="husstDV:DynAttribut_Subtype" maxOccurs="unbounded" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  
  <!--Relationen -->
  
  <xs:complexType name="Interpretationen_Type">
    <xs:annotation>
      <xs:documentation>
        Interpretationen definiert, wie die Daten zu
        interpretieren sind.
        Dazu werden Parameter mit einem
        Schluessel und einem Wert eingetragen.
      </xs:documentation>
      <xs:appinfo>
        <api:primekey>
          <api:field name="Interpretationsschluessel"/>
          <api:field name="ID_Zeitraum"/>
        </api:primekey>
        <api:schema name="Basis"/>
        <api:schema name="Tarif"/>
      </xs:appinfo>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Deaktiviert" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <xs:element name="ID_Zeitraum" type="husstDV:INT4" maxOccurs="1" minOccurs="1"/>
      <xs:element name="Interpretationsschluessel" type="husstDV:Interpretationsschluessel_Type" maxOccurs="1" minOccurs="1"/>
      <xs:element name="Wert" type="xs:string" minOccurs="0" maxOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  
  <!--Hilfstabellen -->
  
  <xs:simpleType name="ID_Projektspezifisch_Type">
    <xs:annotation>
      <xs:documentation>
        Frei definierbare IDs für Def-Elemente beginnen mit 1000.
        Im freidefinierbaren Bereich gibt es herstellerspezifische Wertebereiche. s. https://github.com/HUSST-de/HUSST/tree/master/Version%203/3.0
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="husstDV:INT4">
      <xs:minInclusive value="1000"/>
    </xs:restriction>
  </xs:simpleType>
  
  <xs:simpleType name="ID_WaehrungHUSST_Type">
    <xs:annotation>
      <xs:documentation>
        Die HUSST definiert Waehrungs-ID kleiner 1000
        Als ID-Währung ist der dreistellige Zifferncode nach ISO 4217 zu verwenden.
        Außer für den EUR. Hier ist in der HUSST die 999 definiert.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="husstDV:INT4">
      <xs:minInclusive value="0"/>
      <xs:maxInclusive value="999"/>
    </xs:restriction>
  </xs:simpleType>
  
  <xs:simpleType name="ID_Waehrung_Type">
    <xs:annotation>
      <xs:documentation>
        Die ID_Waehrung ist entweder eine von HUSST vordefinierter Zahl kleiner 1000 oder eine im Projekt vereinbarte Zahl größer gleich 1000.
        Im freidefinierbaren Bereich gibt es herstellerspezifische Wertebereiche. s. https://github.com/HUSST-de/HUSST/tree/master/Version%203/3.0
      </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="husstDV:ID_WaehrungHUSST_Type husstDV:ID_Projektspezifisch_Type"/>
  </xs:simpleType>
  
  <xs:simpleType name="InterpretationsschluesselHUSST_Type">
    <xs:annotation>
      <xs:documentation>
        Die HUSST definiert Interpretationsschluessel die mit 'husst.' beginnen.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="husst.Relationen.Matrixtyp">
        <xs:annotation>
          <xs:documentation>
            Definiert, wie die Relationenmatrix zu interpretieren ist.
            mögliche Matrixtypen sind
            "Vollmatrix" : Jede Verbindung ist in jeder erlaubten Richtung in der Relationenmatrix hinterlegt.
            "Halbmatrix" : Zu jeder möglichen Verbindung ist nur die Variante ID_RelcodeStart größer gleich ID_RelcodeZiel hinterlegt, die umgekehrte Richtung ist dazu identisch.
            "erweitert Halbmatrix" : Die Relationen werden im Regelfall mit ID_RelcodeStart größer gleich ID_RelcodeZiel definiert, es kann aber auch die Rückrichtung definiert
            sein,
            dann muss das Flag GegenrichtungLiegtVor auf true gesetzt werden.
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="husst.Relationen.Suchstrategie">
        <xs:annotation>
          <xs:documentation>
            Definiert, wie die Ermittlung einer Verkaufsverbindung erfolgen soll.
            Ist der Schlüssel nicht definiert, wird über ID_RelcodeStart und ID_RelcodeZiel in den Relationen nach einer oder mehreren Verbindungen gesucht.
            mögliche Suchstrategien sind
            "NbHstSuche + RCSuche" : Suchstrategie für die Relationsermittlung: Nachbarhaltestellensuche zusätzlich zur Relationscodesuche.
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="husst.Teilrelationen.Matrixpreisbildung">
        <xs:annotation>
          <xs:documentation>
            Definiert, wie die Preisbildung aus den Teilrelationen erfolgen soll.
            Ist der Schlüssel nicht definiert, wird der Preis anhand der ID_Preisstufe der ersten Teilrelation ermittelt.
            mögliche Matrixpreisbildungen sind
            "Anstoß_CH" : Wenn nur eine Teilrelation exisitiert, dann wie beim Standardfall.
            Sonst: Preisstufenattribute werden von der Preisstufe der ersten Teilrelation verwendet.
            Der Preis wird nach einer eigenen CH-Logik aus den weiteren Teilrelationen berechnet.
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  
  <xs:simpleType name="InterpretationsschluesselProjektspezifisch_Type">
    <xs:annotation>
      <xs:documentation>
        Für projektspezifische Zwecke oder zum Test
        können eigene Namen für Interpretationsschluessel verwendet werden.

        Namensregeln:
        Eigene Namen ..
        .. dürfen nicht mit 'husst.' beginnen,
        .. dürfen nicht mit einer Zahl beginnen,
        .. müssen mindestens ein Zeichen [a-ZöäüÖÄÜß\-0-9] je Wort enthalten
        .. müssen mit einem Wort beginnen,
        .. dürfen mehrere Wörter mit '.' oder '-' trennen,
        .. dürfen nicht mit einem Punkt enden.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="((h[^u])|hu[^s]|hus[^s]|huss[^t]|husst[^\.]|[a-gi-zA-ZöäüÖÄÜß][a-zA-ZöäüÖÄÜß0-9]*)([\-\.][a-zA-ZöäüÖÄÜß0-9]+)*"/>
      <!-- 				value="(((h|H)[^(u|U)])|(h|H)(u|U)[^(s|S)]|(h|H)(u|U)(s|S)[^(s|S)]|(h|H)(u|U)(s|S)(s|S)[^(t|T)]|(h|H)(u|U)(s|S)(s|S)(t|T)[^\.]|[a-gi-zA-ZöäüÖÄÜß0-9])((\w*[a-zA-ZöäüÖÄÜß]\w*)+([\-\.]))*(\w*[a-zA-ZöäüÖÄÜß]\w*)+" /> -->
      <!-- Leider untersützt xsd keinen negativen Forcast (?!husst\.), das
				macht den Ausdruck unnötig kompliziert. <pattern value="(?!husst\.)((\w*[a-zA-ZöäüÖÄÜß]\w*)+([\-\.]))*(\w*[a-zA-ZöäüÖÄÜß]\w*)+"/> -->

    </xs:restriction>
  </xs:simpleType>
  
  <xs:simpleType name="Interpretationsschluessel_Type">
    <xs:annotation>
      <xs:documentation>Die Interpretationsschluessel sind entweder von der HUSST vordefiniert oder eine im Projekt vereinbarter string.</xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="husstDV:InterpretationsschluesselHUSST_Type husstDV:InterpretationsschluesselProjektspezifisch_Type"/>
  </xs:simpleType>
  
  <xs:complexType name="DefWaehrung_Type">
    <xs:annotation>
      <xs:appinfo>
        <api:primekey>
          <api:field name="ID_Waehrung"/>
          <api:field name="ID_Zeitraum"/>
        </api:primekey>
        <api:schema name="Basis"/>
      </xs:appinfo>
      <xs:documentation>Definiert die Währungen, die in den Versorgungsdaten vorkommen (können). Siehe auch ID_Waehrung_Type bzw. ID_WaehrungHUSST_Type</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Deaktiviert" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <xs:element name="ID_Zeitraum" type="husstDV:INT4" maxOccurs="1" minOccurs="1"/>
      <xs:element name="ID_Waehrung" type="husstDV:ID_Waehrung_Type" maxOccurs="1" minOccurs="1"/>
      <xs:element name="Bezeichnung" type="xs:string" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            ISO-Kurzbezeichnung z.B. EUR, USD, CHF,...
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ReferenzExtern" type="xs:string" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Dient als Referenz um extern definierte Elemente über einen ggf. auch nicht numerischen Schlüssel
            identifizieren zu können.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DynAttribut" type="husstDV:DynAttribut_Subtype" maxOccurs="unbounded" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  
  <xs:complexType name="Updateinfo_Type">
    <xs:annotation>
      <xs:documentation>
        Dokumentation von Updatevorgängen über der zunächst
        generierten Datenmenge
      </xs:documentation>
      <xs:appinfo>
        <api:primekey>
          <api:field name="Updatetime"/>
          <api:field name="Filename"/>
        </api:primekey>
        <api:schema name="Basis"/>
      </xs:appinfo>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Updatetime" type="husstDV:DateTimeCompact" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Zeitpunkt des Updatevorgangs
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Filename" type="xs:string" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Filename des Updatescripts oder Bezeichnung des Updatevorgangs
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Purpose" type="xs:string" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Hinweis zum Zweck des Updatevorgangs
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  
  <xs:complexType name="VersionInhalt_Type">
    <xs:annotation>
      <xs:appinfo>
        <api:primekey>
          <api:field name="DatenversionInhalt"/>
          <api:field name="Erstellungsdatum"/>
          <api:field name="Lieferant"/>
        </api:primekey>
        <api:schema name="Basis"/>

      </xs:appinfo>
      <xs:documentation>Eine Datenlieferung enthält einen Datensatz VersionInhalt.
        Dieser definiert, welche Datenversion die komplette Husstlieferung besitzt.
        Dieses ist eine Metainformation um diese Lieferung einfach von anderen zu unterscheiden.
        Über die Registrierung Der DatenversionInhalt können Verkaufsdaten ihrer exakten Versorgungsdatenlieferung zugewordnet werden.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>

      <xs:element name="DatenversionInhalt" type="xs:string" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Eindeutige Versionskennung für die gesamte Datenlieferung.
            In der gesamten Datenlieferung darf dieses Element nur einmal vorkommen.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Testdaten" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <xs:element name="Erstellungsdatum" type="husstDV:DateTimeCompact" minOccurs="1" maxOccurs="1"/>
      <xs:element name="Lieferant" type="xs:string" minOccurs="1" maxOccurs="1"/>
      <xs:element name="Kommentar" type="xs:string" minOccurs="0" maxOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  
  <xs:complexType name="Bearbeitung_Type">
    <xs:annotation>
      <xs:appinfo>
        <api:primekey>
          <api:field name="Bearbeitungsdatum"/>
          <api:field name="Lieferant"/>
        </api:primekey>
        <api:schema name="Basis"/>

      </xs:appinfo>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Bearbeitungsdatum" type="husstDV:DateTimeCompact" minOccurs="1" maxOccurs="1"/>
      <xs:element name="Lieferant" type="xs:string" minOccurs="1" maxOccurs="1"/>
      <xs:element name="Kommentar" type="xs:string" minOccurs="0" maxOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  
  <xs:complexType name="VersionStruktur_Type">
    <xs:annotation>
      <xs:appinfo>
        <api:schema name="Basis"/>
      </xs:appinfo>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="VersionMajor" type="husstDV:INT4" maxOccurs="1" minOccurs="1" default="3">
        <xs:annotation>
          <xs:documentation>VersionMajor muss sich immer bei Inkompatibilitäten zur Vorgängerversion ändern.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="VersionMinor" type="husstDV:INT4" maxOccurs="1" minOccurs="1" default="4">
        <xs:annotation>
          <xs:documentation>VersionMinor zählt kompatible Anpassungen.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="VersionPatch" type="husstDV:INT4" maxOccurs="1" minOccurs="1" default="1">
        <xs:annotation>
          <xs:documentation>VersionPatch zählt abwärtskompatible Bugfixes.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Status" type="husstDV:VersionStatus_Type" default="Release" minOccurs="0" maxOccurs="1"/>
      <xs:element name="Aenderungsdatum" type="husstDV:DateCompact" default="2024-02-06" maxOccurs="1" minOccurs="0"/>
      <xs:element name="Aenderungsautor" type="xs:string" default="HUSST-Arbeitsgruppe" minOccurs="0" maxOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  
  <xs:complexType name="DefBundesland_Type">
    <xs:annotation>
      <xs:documentation>
        Definiert einen Gliedstaat (in Deutschland: Bundesland).
      </xs:documentation>
      <xs:appinfo>
        <api:primekey>
          <api:field name="ID_Bundesland"/>
          <api:field name="ID_Zeitraum"/>
        </api:primekey>
        <api:schema name="Basis"/>
      </xs:appinfo>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Deaktiviert" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <xs:element name="ID_Zeitraum" type="husstDV:INT4" maxOccurs="1" minOccurs="1"/>
      <xs:element name="ID_Bundesland" type="husstDV:INT4" maxOccurs="1" minOccurs="1"/>
      <xs:element name="Iso" type="xs:string" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Für Deutschland: die letzten zwei Stellen des ISO
            3166-2 Codes für Gliedstaaten.
            DE-BW Baden-Württemberg also: BW
            DE-BY Bayern also: BY
            DE-BE Berlin also: BE
            DE-BB Brandenburg also: BB
            DE-HB Bremen also: HB
            DE-HH Hamburg also: HH
            DE-HE Hessen also: HE
            DE-MV Mecklenburg-Vorpommern also: MV
            DE-NI Niedersachsen also: NI
            DE-NW Nordrhein-Westfalen also: NW
            DE-RP Rheinland-Pfalz also: RP
            DE-SL Saarland also: SL
            DE-SN Sachsen also: SN
            DE-ST Sachsen-Anhalt also: ST
            DE-SH Schleswig-Holstein also: SH
            DE-TH Thüringen also: TH
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Bezeichnung" type="xs:string" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>Name des Bundeslandes</xs:documentation>
        </xs:annotation>
      </xs:element>

      <xs:element name="ReferenzExtern" type="xs:string" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Dient als Referenz um extern definierte Elemente über einen ggf. auch nicht numerischen Schlüssel
            identifizieren zu können.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DynAttribut" type="husstDV:DynAttribut_Subtype" maxOccurs="unbounded" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  
  <xs:complexType name="Feiertage_Type">
    <xs:annotation>
      <xs:appinfo>
        <api:primekey>
          <api:field name="ID_Feiertag"/>
          <api:field name="ID_Zeitraum"/>
        </api:primekey>
        <api:uniquekey name="Uix_Feiertage">
          <api:field name="Datum"/>
          <api:field name="ID_Bundesland"/>
          <api:field name="ID_Zeitraum"/>
        </api:uniquekey>
        <api:schema name="Basis"/>
      </xs:appinfo>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Deaktiviert" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <xs:element name="ID_Zeitraum" type="husstDV:INT4" maxOccurs="1" minOccurs="1"/>
      <xs:element name="ID_Feiertag" type="husstDV:INT4" maxOccurs="1" minOccurs="1"/>
      <xs:element name="ID_Bundesland" type="husstDV:INT4" maxOccurs="1" minOccurs="1"/>
      <xs:element name="Datum" type="husstDV:DateCompact" maxOccurs="1" minOccurs="1"/>
      <xs:element name="Bezeichnung" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <xs:element name="DynAttribut" type="husstDV:DynAttribut_Subtype" maxOccurs="unbounded" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  
  <xs:complexType name="Unternehmen_Type">
    <xs:annotation>
      <xs:appinfo>
        <api:primekey>
          <api:field name="ID_Unternehmen"/>
          <api:field name="ID_Zeitraum"/>
        </api:primekey>
        <api:schema name="Basis"/>
      </xs:appinfo>
      <xs:documentation>Unternehmen definieren organisatorische Einheiten, die in dem Vertriebssystem eine Rolle übernehmen.
        Wenn sie die Rolle eines Mandanten im System übernehmen, kann dies über ihre Mandant Eigenschaft angezeigt werden.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Deaktiviert" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <xs:element name="ID_Zeitraum" type="husstDV:INT4" maxOccurs="1" minOccurs="1"/>
      <xs:element name="ID_Unternehmen" type="husstDV:INT4" maxOccurs="1" minOccurs="1"/>
      <xs:element name="BezeichnungKurz" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <xs:element name="Bezeichnung" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <xs:element name="Mandant" type="xs:boolean" maxOccurs="1" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            True, wenn das Unternehmen als Mandant im System geführt
            wird.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ReferenzExtern" maxOccurs="1" minOccurs="0" type="xs:string">
        <xs:annotation>
          <xs:documentation>
            Dient als Referenz um Unternehmen über eine nicht numerische
            Referenz ggf. auch bezogen auf Drittsysteme identifizieren
            zu können.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DynAttribut" type="husstDV:DynAttribut_Subtype" maxOccurs="unbounded" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  
  <xs:element name="VersionInhalt" type="husstDV:VersionInhalt_Type"/>
  
  <xs:element name="Bearbeitung" type="husstDV:Bearbeitung_Type"/>
  
  <xs:element name="DefBundeslaender" type="husstDV:DefBundesland_Type"/>
  
  <xs:element name="Zeitraeume" type="husstDV:Zeitraeume_Type"/>
  
  <xs:element name="Zeitraumoptionen" type="husstDV:Zeitraumoptionen_Type"/>
  
  <xs:element name="Kalender" type="husstDV:Kalender_Type"/>
  
  <xs:element name="Tagesarten" type="husstDV:Tagesarten_Type"/>
  
  <xs:element name="Tagesmerkmale" type="husstDV:Tagesmerkmale_Type"/>
  
  <xs:element name="TagesmerkmalElemente" type="husstDV:TagesmerkmalElemente_Type"/>
  
  <xs:element name="TagesartMerkmalElemente" type="husstDV:TagesartMerkmalElemente_Type"/>
  
  <xs:element name="Feiertage" type="husstDV:Feiertage_Type"/>
  
  <xs:element name="Unternehmen" type="husstDV:Unternehmen_Type"/>
  
  <xs:element name="Interpretationen" type="husstDV:Interpretationen_Type"/>
  
  <xs:element name="DefWaehrungen" type="husstDV:DefWaehrung_Type"/>
  
  <xs:element name="VersionStruktur" type="husstDV:VersionStruktur_Type"/>
  
  <xs:element name="Updateinfo" type="husstDV:Updateinfo_Type"/>
  
  <xs:complexType name="DynAttributDef_Type">
    <xs:annotation>
      <xs:documentation>
        Definition der dynamischen Attribute, die in dieser
        Datenmenge verwendet werden.

        Dynamische Attribute ergänzen einen
        Datentyp um weitere
        Eigenschaften. Jedem Datensatz kann für seinen
        eindeutigen Datensatzschlüssel (ID_[Typname]
        , z.B. ID_Sorte), der
        Tabellennummer und der ID
        einer dynamischen Attribut-Definition ein
        konkreter
        Wert für diese Eigenschaft hinterlegt werden.

        Da die AttributDef-Struktur ausschließlich der Interpretation der
        Daten innerhalb der abgeschlossenen Datenlieferung dient, benötigt
        sie weder eine deaktiviert Kennung noch eine Referenz auf einen
        spezifischen Zeitraum innerhalb der Datenmenge.
      </xs:documentation>
      <xs:appinfo>
        <api:primekey>
          <api:field name="ID_DynAttributDef"/>
        </api:primekey>
        <api:schema name="Basis"/>

      </xs:appinfo>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="ID_DynAttributDef" type="xs:integer" maxOccurs="1" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Referenznummer der dynamischen Attributdefinition.
            Die Nummer hat nur innerhalb der Datenmenge eine Bedeutung und kann
            nicht als persistent vorausgesetzt werden.
          </xs:documentation>
          <xs:appinfo>

          </xs:appinfo>
        </xs:annotation>
      </xs:element>
      <xs:element name="Name" type="xs:string" maxOccurs="1" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Interner Name des dynamischen Attributs. Die
            möglichen Namen dynamischer Attribute werden bei krauth technology
            zentral verwaltet. Dabei werden, wenn vorhanden, die in der offen
            Husst-Schnittstelle abgestimmten Definitionen einbezogen.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DynAttributTyp" type="husstDV:DynAttributTyp_Type" maxOccurs="1" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Der Datentyp der konkreten Daten die unter der
            ID_DynAttributDef in der Datenmenge DynAttribut_Type im Feld Wert
            als String-Information abgelegt ist.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  
  <xs:simpleType name="DynAttributTyp_Type">
    <xs:annotation>
      <xs:documentation>
        Die Werte eines dynamischen Attributes werden als
        String
        abgelegt. Wie dieser zu verstehen ist, wird durch den
        DynAttributTyp definiert.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="int">
        <xs:annotation>
          <xs:documentation>vorzeichenbehaftete Ganzzahl</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="bool">
        <xs:annotation>
          <xs:documentation>
            logischer Wert, Wertebereich "0" für false oder
            "1" für true
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="string">
        <xs:annotation>
          <xs:documentation>Zeichenkette</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="datetime">
        <xs:annotation>
          <xs:documentation>
            Zeitpunkt (Datum/Uhrzeit) nach ISO8601 -
            (Beispiel: 2014-06-10T07:46+02:00, eine Angabe ohne die Abweichung
            von der UTC-Zeit ist auch zulässig)
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="hex">
        <xs:annotation>
          <xs:documentation>
            hexadezimal codierter Datenstring - zulässige
            Zeichen: '0'-'9', 'a'-'f', 'A'-'F'. Niederwertiges Byte zuerst,
            höherwertiges Halb-Byte zuerst.
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="id_sprachtext">
        <xs:annotation>
          <xs:documentation>
            vorzeichenlose Ganzzahl, Verweis auf
            ID_Sprachtext in der Tabelle Sprachtexte, einen möglicherweise
            mehrsprachig hinterlegten Text
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  
  <xs:complexType name="DynAttributWert_Type">
    <xs:annotation>
      <xs:documentation>
        Die Tabelle enthält den Wert eines dynamischen Attributs.

        Die Werte der dynamischen Attribute sind an die ID eines Datensatzes
        und damit auch an die ID eines konkreten Zeitraumes gekoppelt.
        Deshalb wird die Eigenschaft ID_Zeitraum benötigt. Bezieht sich ein
        dynamisches Attribut auf eine Tabellennummer, deren Struktur selbst
        keine ID_Zeitraum Eigenschaft besitzt (z.B. Inhalt_Type), dann
        bleibt ID_Zeitraum leer.

        Anders verhält es sich mit der Deaktiviert Eigenschaft. Diese bezieht sich
        explizit auf den gesamten Datensatz einer Datenstruktur. Formal wäre
        dies für die DynAttributWert Tabelle verwendbar. Allerdings bildet
        ein Eintrag in der DynAttributWert Tabelle nur ein Attribut
        innerhalb eines Datensatzes einer anderen Struktur ab. Diese andere
        Struktur besitzt den Deaktiviert Mechanismus für ihren Datensatz und
        damit auch für alle dynamischen Attribute, die an diesem Datensatz
        hängen.
      </xs:documentation>
      <xs:appinfo>
        <api:primekey>
          <api:field name="ID_Zeitraum"/>
          <api:field name="ID_DynAttributDef"/>
          <api:field name="Tabellennummer"/>
          <api:field name="ID_DatensatzRef"/>
          <api:field name="Lang"/>
        </api:primekey>
        <api:schema name="Basis"/>
      </xs:appinfo>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="ID_Zeitraum" type="husstDV:INT4" maxOccurs="1" minOccurs="1"/>
      <xs:element name="ID_DynAttributDef" type="xs:integer" maxOccurs="1" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Referenznummer der dynamischen Attributdefinition.
            Die Nummer hat nur innerhalb der Datenmenge eine Bedeutung und kann
            nicht als persistent vorausgesetzt werden.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Tabellennummer" type="husstDV:INT4" maxOccurs="1" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Eindeutige Nummer der referenzierten
            Datenstruktur. Neben dem eindeutigen Namen jedes
            Datentyps (z.B. Tarifgebiet für
            Tarifgebiet_Type) der aus dem Typnamen
            regelbasiert abgeleitet wird, erhält jeder Typ
            eine eindeutige Tabellennummer. Damit muss nicht
            bei jeder Datenmenge eine numerische ID für
            jeden Datentyp abgelegt werden. Andererseits
            kann bei Referenzen wie DynAttributWert die
            Tabellennummer viel effizienter als
            Schlüsselwert verwendet werden, als ein
            entsprechender Name.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ID_DatensatzRef" type="husstDV:INT4" maxOccurs="1" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Eindeutiger Datensatzschlüssel (ID_[Typname])
            des Datensatzes, für den dieses dynamische
            Attribut definiert ist. Der Datensatz ist in der
            Datenstruktur zu finden, die mit Tabellennummer
            eindeutig beschrieben ist und ist zusammen mit
            ID_Zeitraum eindeutig zu ermitteln.

            Warnung! Datenstrukturen, die keine eindeutige
            Datensatz-ID mitführen, können keine dynamischen
            Attribute haben (z.B. Teilrelationen_Type).
            Zuvor müssten diese Strukturen um ein
            ID_[Typname])-Feld erweitert werden.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Lang" type="husstDV:Lang_Type" maxOccurs="1" minOccurs="0">
        <xs:annotation>
          <xs:documentation>optionale Sprachkennung des Wertes</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Wert" type="husstDV:blobString" maxOccurs="1" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  
  <xs:complexType name="Sprachtexte_Type">
    <xs:annotation>
      <xs:documentation>
        Für sprachalternative Texte wird statt ihres Textes eine
        ID_Sprachtext als Verweis auf die neue Tabelle
        Sprachtexte hinterlegt. Über ID_Sprachtext und der genau
        zwei Zeichen langen Sprachkennung kann dann der Text in
        der Tabelle Sprachtexte ermittelt werden.

        Sprachtexte_Type bietet die Möglichkeit, identische Text-Bundle über die gleiche
        Menge an Sprachkennungen nur einmal in der Datenbank abzulegen und
        damit das Datenvolumen der Gesamtdatenmenge zu reduzieren. Würde der
        eigentliche Text selbst noch über eine weitere Referenzstufe sprach-
        und bedeutungslos in einer Texttabelle hinterlegt, wäre die
        Einsparung vermutlich einfacher zu realisieren und in der Summer
        vermutlich größer.

        Sprachtexte sind innerhalb des Datenpaketes
        allgemeingültig definiert und sind nicht über eine
        ID_Zeitraum-Eigenschaft versioniert. Ihre IDs sind nicht
        persistent denn sie haben nur innerhalb des Datenpaketes
        eine referenzierende Bedeutung.
      </xs:documentation>
      <xs:appinfo>
        <api:primekey>
          <api:field name="ID_Sprachtext"/>
          <api:field name="Lang"/>
        </api:primekey>
        <api:schema name="Basis"/>
      </xs:appinfo>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="ID_Sprachtext" type="xs:string" maxOccurs="1" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Eindeutiger Schlüssel für den logischen Inhalt
            des Textes der unter dieser Nummer ggf. in verschiedenen Sprachen
            abgelegt ist.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Lang" type="husstDV:Lang_Type" maxOccurs="1" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Sprache, für die der Text abgelegt ist.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Text" type="xs:string" maxOccurs="1" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  
  <xs:complexType name="Tabelleninfo_Type">
    <xs:annotation>
      <xs:documentation>
        Erweitertert die XML-Sturktur um Informationen über
        die Abbildung der Daten in ein relationales Datenmodell.
        Im Wesentlichen dokumentiert die Struktur zur Zeit die fest definierte
        Beziehung zwischen dem Tabellen-Namen und der persistenten und
        eindeutigen numerischen Abbildung als Tabellennummer.
        Außerdem stellt sie den Bezug zum Namen der Xml-Datenstruktur her.
        Falls künftig noch weitere Strukturinformationen benötigt werden, ist an
        die Erweiterung des Tabelleninfo_Type zu denken.

        Damit wird die in
        &lt;xs:annotation&gt;&lt;appinfo&gt;&lt;tablenumber&gt;...
        definierte Tabellennummer für nachfolgende Prozesse in jeder
        Datenmenge hinterlegt.

        Die numerische Abbildung einer Struktur wird als Schlüsselelement für
        den Zugriff auf Datenstrukturen benötigt, deren Elemente sich auf
        mehrere Elternstrukturen beziehen können.
        Damit wird es möglichen, diese Beziehung in relationen DBMS performant
        implementieren zu können. Wegen der spezifischen Verwendung für
        relationen DBMS wird bewusst der Begriff Tabellennummer verwendet,
        der ansonsten in der XML-Repräsentation der Daten als Fremdkörper
        wirkt.
        Beispiel für die Verwendung ist der DynAttributWert_Type bei dem die
        Tabellennummer als Attribut im Primärschlüssel der Struktur
        vorkommt.

        Tabellennummern_Type ist eine Metainformationsstruktur.
        Für die XML-Repräsentanz der Daten spielt sie keine Rolle und muss dort
        auch nicht eingetragen werden. In der XML-Dartstellung werden die
        referenzierten Daten nicht getrennt von ihrer Hauptinformation
        abgelegt sondern bilden noch eine Einheit.
        Für die Umwandlung in eine DB-Struktur, die diese Tabellennummern
        benutzt, ist dagegen zwingend vorgeschrieben, mindestens die
        Tabellennummern zu dokumentieren, die in den Daten verwendet werden.
        Die komplette Auflistung der Tabellenmmnern einer Struktur wird für
        DB-Repräsentationen empfohlen.
      </xs:documentation>
      <xs:appinfo>
        <api:primekey>
          <api:field name="Tabellennummer"/>
        </api:primekey>
        <index name="Idx_Tabinfoname">
          <field name="Tabellenname"/>
        </index>
        <api:schema name="Basis"/>
      </xs:appinfo>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Tabellenname" type="xs:string" maxOccurs="1" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Name der Tabelle in einer relationen DB
            Abbildung dieser Datenstruktur. Zum Beispiel
            'Sorten' für die Elemente der Sorten_Type
            Struktur. Er entspricht dem Xml-Attribut "name" der Element-Definition der
            Struktur in der XML-Datenmenge. Zum Beispiel
            &lt;xs:element name="Sorten"
            type="husstDV:Sorten_Type" nillable="true" /&gt;
            oder auch
            &lt;xs:element name="SortenTarifarten"
            type="husstDV:SortenTarifarten_Type" nillable="true" /&gt;

            Die Schreibweise des Names entspricht dem Elementname, der in der
            Xml-Datenmenge verwendet wird.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Tabellennummer" type="husstDV:INT4" maxOccurs="1" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Persistente und eindeutigen numerische
            Abbildung. Die Tabellennnummer wird in dieser
            Struktur als
            &lt;xs:annotation&gt;&lt;appinfo&gt;&lt;tablenumber
            hinterlegt und gilt als Teil der
            Strukturdefinition.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Strukturname" type="xs:string" maxOccurs="1" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            Name der Xml-Datenstruktur, die von dieser
            Tabelle abgebildet wird.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  
  <xs:complexType name="DynAttribut_Subtype">
    <xs:annotation>
      <xs:documentation>
        Der Subtyp DynAttribut_Subtype dient der Definition von
        dynamischen Attributen als mögliche Erweiterung für die
        Xml-Darstellung der Daten. Der Subtyp wird nicht 1:1 für
        eine Abbildung auf ein relationales Datenbankmodell
        verwendet.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Name" type="xs:string" maxOccurs="1" minOccurs="1"/>
      <xs:element name="Wert" type="husstDV:DynAttributWert_Subtype" maxOccurs="unbounded" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="dtyp" type="husstDV:DynAttributTyp_Type"/>
  </xs:complexType>
  
  <xs:complexType name="DynAttributWert_Subtype">
    <xs:simpleContent>
      <xs:extension base="husstDV:blobString">
        <xs:attribute name="lang" type="husstDV:Lang_Type"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
</xs:schema>
  
  